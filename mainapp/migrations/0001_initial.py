# Generated by Django 2.2 on 2019-07-15 11:50

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mainapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'polus'), (2, 'compony'), (3, 'department')])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('color', models.CharField(default='#007bff', max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resume', models.FileField(upload_to=mainapp.models.user_directory_path, verbose_name='Upload Resumes')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('mobile_number', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Mobile Number')),
                ('skills', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Skills')),
                ('full_data', models.CharField(blank=True, max_length=2000, null=True, verbose_name='full_data')),
                ('declaration', models.CharField(blank=True, max_length=1000, null=True, verbose_name='declaration')),
                ('achievemnets', models.CharField(blank=True, max_length=1000, null=True, verbose_name='achievemnets')),
                ('education', models.CharField(blank=True, max_length=1000, null=True, verbose_name='education')),
                ('experience', models.CharField(blank=True, max_length=1000, null=True, verbose_name='experience')),
                ('experience_json', models.CharField(blank=True, max_length=1000, null=True, verbose_name='experience_json')),
                ('hobbies', models.CharField(blank=True, max_length=1000, null=True, verbose_name='hobbies')),
                ('interest', models.CharField(blank=True, max_length=1000, null=True, verbose_name='interest')),
                ('language', models.CharField(blank=True, max_length=1000, null=True, verbose_name='language')),
                ('objective', models.CharField(blank=True, max_length=1000, null=True, verbose_name='objective')),
                ('personal_details', models.CharField(blank=True, max_length=1000, null=True, verbose_name='personal_detials')),
                ('personal_details_json', models.CharField(blank=True, max_length=1000, null=True, verbose_name='personal_detials_json')),
                ('reference', models.CharField(blank=True, max_length=1000, null=True, verbose_name='reference')),
                ('seminar', models.CharField(blank=True, max_length=1000, null=True, verbose_name='seminar')),
                ('soft_skill', models.CharField(blank=True, max_length=1000, null=True, verbose_name='soft_skill')),
                ('technical_skill', models.CharField(blank=True, max_length=1000, null=True, verbose_name='technical_skill')),
                ('technical_skill_json', models.CharField(blank=True, max_length=1000, null=True, verbose_name='technical_skill_json')),
                ('iv', models.CharField(blank=True, max_length=1000, null=True, verbose_name='iv')),
                ('project', models.CharField(blank=True, max_length=1000, null=True, verbose_name='project')),
                ('project_json', models.CharField(blank=True, max_length=1000, null=True, verbose_name='project_json')),
                ('training', models.CharField(blank=True, max_length=1000, null=True, verbose_name='training')),
                ('last_uploaded_on', models.DateTimeField(auto_now_add=True, verbose_name='Uploaded On')),
                ('rule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.Rule')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
